name: Generate Markmap Posts from Markdown

on:
  push:
    paths:
      - 'markmap/*.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install markmap-cli
        run: npm install -g markmap-cli

      - name: Generate HTML mindmaps
        run: |
          mkdir -p assets/markmaps
          for file in markmap/*.md; do
            name=$(basename "$file" .md)
            markmap "$file" -o "assets/markmaps/$name.html"
          done

      - name: Create Jekyll posts with iframes
        run: |
          mkdir -p _posts
          for filepath in markmap/*.md; do
            file=$(basename "$filepath" .md)
            title=$(echo "$file" | tr '-_' ' ' | sed -E 's/(^| )([a-z])/\U\2/g')
            date=$(date +%Y-%m-%d)
            filename="${date}-${file}.html"

            echo "---" > "_posts/$filename"
            echo "layout: post" >> "_posts/$filename"
            echo "title: \"$title\"" >> "_posts/$filename"
            echo "date: $date" >> "_posts/$filename"
            echo "---" >> "_posts/$filename"
            echo "" >> "_posts/$filename"
            echo "<iframe src=\"{{ site.baseurl }}/assets/markmaps/${file}.html\" width=\"100%\" height=\"600\" style=\"border:none;\"></iframe>" >> "_posts/$filename"
          done

      - name: Wait for existing GitHub Pages deployment to complete
        run: |
          echo "Waiting for any in-progress GitHub Pages deployments..."
          for i in {1..30}; do
            deployments=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
              https://api.github.com/repos/${{ github.repository }}/deployments)

            latest_deployment_id=$(echo "$deployments" | jq '.[0].id')

            statuses=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
              https://api.github.com/repos/${{ github.repository }}/deployments/${latest_deployment_id}/statuses)

            state=$(echo "$statuses" | jq -r '.[0].state')

            echo "Current deployment status: $state"

            if [[ "$state" == "in_progress" || "$state" == "queued" ]]; then
              echo "Deployment in progress... waiting 10s"
              sleep 10
            else
              echo "No deployment in progress. Continuing."
              break
            fi

            if [[ $i -eq 30 ]]; then
              echo "Timed out waiting for deployment to finish."
              exit 1
            fi
          done

      - name: Commit and push generated posts
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add assets/markmaps _posts
          git diff --quiet && echo "No changes" || git commit -m "Auto-generate Markmap post(s)"
          git push https://x-access-token:${{ secrets.GH_ACTION_TOKEN }}@github.com/ayinos/ayinos.github.io.git HEAD:main

