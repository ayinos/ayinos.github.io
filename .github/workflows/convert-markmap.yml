name: Convert Markmap Files to Jekyll Posts

on:
  push:
    paths:
      - 'markmaps/**/*.md'

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with write access
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set safe Git directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Markmap CLI
        run: |
          npm install -g markmap-cli
          markmap --version

      - name: Convert Markdown to Markmap HTML posts
        run: |
          mkdir -p _posts
          for file in markmaps/*.md; do
            base=$(basename "$file" .md)
            today=$(date +%Y-%m-%d)
            outfile="_posts/${today}-${base}.html"

            # Generate the markmap HTML
            markmap "$file" -o "$outfile"

            # Save original content
            content=$(cat "$outfile")

            # Add Jekyll front matter and overwrite
            printf "%s\n" \
              "---" \
              "layout: post" \
              "title: \"${base//-/ }\"" \
              "categories: [markmap]" \
              "tags: [mindmap]" \
              "---" \
              "" \
              "$content" > "$outfile"
          done

      - name: Wait for existing GitHub Pages deployment to complete
        run: |
          echo "Waiting for any in-progress GitHub Pages deployments..."
          for i in {1..30}; do
            deployments=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
              https://api.github.com/repos/${{ github.repository }}/deployments)

            latest_deployment_id=$(echo "$deployments" | jq '.[0].id')

            statuses=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
              https://api.github.com/repos/${{ github.repository }}/deployments/${latest_deployment_id}/statuses)

            state=$(echo "$statuses" | jq -r '.[0].state')

            echo "Current deployment status: $state"

            if [[ "$state" == "in_progress" || "$state" == "queued" ]]; then
              echo "Deployment in progress... waiting 10s"
              sleep 10
            else
              echo "No deployment in progress. Continuing."
              break
            fi

            if [[ $i -eq 30 ]]; then
              echo "Timed out waiting for deployment to finish."
              exit 1
            fi
          done

      - name: Commit and push generated posts
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add _posts/
          git commit -m "Auto-generate Markmap post(s)" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} HEAD:main
